// Generated by view binder compiler. Do not edit!
package com.example.treest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.treest.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentViewprofileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton editImage;

  @NonNull
  public final EditText editName;

  @NonNull
  public final Guideline guideline50;

  @NonNull
  public final ImageView image;

  @NonNull
  public final TextView save;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView undo;

  @NonNull
  public final View view2;

  private FragmentViewprofileBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton editImage, @NonNull EditText editName,
      @NonNull Guideline guideline50, @NonNull ImageView image, @NonNull TextView save,
      @NonNull TextView textView, @NonNull TextView undo, @NonNull View view2) {
    this.rootView = rootView;
    this.editImage = editImage;
    this.editName = editName;
    this.guideline50 = guideline50;
    this.image = image;
    this.save = save;
    this.textView = textView;
    this.undo = undo;
    this.view2 = view2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentViewprofileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentViewprofileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_viewprofile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentViewprofileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editImage;
      FloatingActionButton editImage = ViewBindings.findChildViewById(rootView, id);
      if (editImage == null) {
        break missingId;
      }

      id = R.id.editName;
      EditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.guideline50;
      Guideline guideline50 = ViewBindings.findChildViewById(rootView, id);
      if (guideline50 == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.save;
      TextView save = ViewBindings.findChildViewById(rootView, id);
      if (save == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.undo;
      TextView undo = ViewBindings.findChildViewById(rootView, id);
      if (undo == null) {
        break missingId;
      }

      id = R.id.view2;
      View view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      return new FragmentViewprofileBinding((ConstraintLayout) rootView, editImage, editName,
          guideline50, image, save, textView, undo, view2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
