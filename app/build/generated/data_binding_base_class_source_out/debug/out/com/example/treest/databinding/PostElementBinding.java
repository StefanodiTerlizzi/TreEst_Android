// Generated by view binder compiler. Do not edit!
package com.example.treest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.treest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostElementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView author;

  @NonNull
  public final TextView comment;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView delay;

  @NonNull
  public final TextView delayLabel;

  @NonNull
  public final View divider;

  @NonNull
  public final Button follow;

  @NonNull
  public final Guideline guidelineCenter;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView statusLabel;

  @NonNull
  public final TextView time;

  private PostElementBinding(@NonNull ConstraintLayout rootView, @NonNull TextView author,
      @NonNull TextView comment, @NonNull TextView date, @NonNull TextView delay,
      @NonNull TextView delayLabel, @NonNull View divider, @NonNull Button follow,
      @NonNull Guideline guidelineCenter, @NonNull ImageView imageView, @NonNull TextView status,
      @NonNull TextView statusLabel, @NonNull TextView time) {
    this.rootView = rootView;
    this.author = author;
    this.comment = comment;
    this.date = date;
    this.delay = delay;
    this.delayLabel = delayLabel;
    this.divider = divider;
    this.follow = follow;
    this.guidelineCenter = guidelineCenter;
    this.imageView = imageView;
    this.status = status;
    this.statusLabel = statusLabel;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostElementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostElementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_element, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostElementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author;
      TextView author = ViewBindings.findChildViewById(rootView, id);
      if (author == null) {
        break missingId;
      }

      id = R.id.comment;
      TextView comment = ViewBindings.findChildViewById(rootView, id);
      if (comment == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.delay;
      TextView delay = ViewBindings.findChildViewById(rootView, id);
      if (delay == null) {
        break missingId;
      }

      id = R.id.delay_label;
      TextView delayLabel = ViewBindings.findChildViewById(rootView, id);
      if (delayLabel == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.follow;
      Button follow = ViewBindings.findChildViewById(rootView, id);
      if (follow == null) {
        break missingId;
      }

      id = R.id.guideline_center;
      Guideline guidelineCenter = ViewBindings.findChildViewById(rootView, id);
      if (guidelineCenter == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.status_label;
      TextView statusLabel = ViewBindings.findChildViewById(rootView, id);
      if (statusLabel == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new PostElementBinding((ConstraintLayout) rootView, author, comment, date, delay,
          delayLabel, divider, follow, guidelineCenter, imageView, status, statusLabel, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
