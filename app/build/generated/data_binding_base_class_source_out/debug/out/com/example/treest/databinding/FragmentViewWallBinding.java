// Generated by view binder compiler. Do not edit!
package com.example.treest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.treest.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentViewWallBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton btnAddPost;

  @NonNull
  public final ImageButton btnDettaglibacheca;

  @NonNull
  public final ImageButton btnSwitch;

  @NonNull
  public final ConstraintLayout parentFragmentViewWall;

  @NonNull
  public final RecyclerView recyclerview;

  @NonNull
  public final RecyclerView recyclerviewOfficialPost;

  @NonNull
  public final TextView terminusFrom;

  @NonNull
  public final TextView terminusTo;

  @NonNull
  public final ConstraintLayout up;

  private FragmentViewWallBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton btnAddPost, @NonNull ImageButton btnDettaglibacheca,
      @NonNull ImageButton btnSwitch, @NonNull ConstraintLayout parentFragmentViewWall,
      @NonNull RecyclerView recyclerview, @NonNull RecyclerView recyclerviewOfficialPost,
      @NonNull TextView terminusFrom, @NonNull TextView terminusTo, @NonNull ConstraintLayout up) {
    this.rootView = rootView;
    this.btnAddPost = btnAddPost;
    this.btnDettaglibacheca = btnDettaglibacheca;
    this.btnSwitch = btnSwitch;
    this.parentFragmentViewWall = parentFragmentViewWall;
    this.recyclerview = recyclerview;
    this.recyclerviewOfficialPost = recyclerviewOfficialPost;
    this.terminusFrom = terminusFrom;
    this.terminusTo = terminusTo;
    this.up = up;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentViewWallBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentViewWallBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_view_wall, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentViewWallBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_post;
      FloatingActionButton btnAddPost = ViewBindings.findChildViewById(rootView, id);
      if (btnAddPost == null) {
        break missingId;
      }

      id = R.id.btn_dettaglibacheca;
      ImageButton btnDettaglibacheca = ViewBindings.findChildViewById(rootView, id);
      if (btnDettaglibacheca == null) {
        break missingId;
      }

      id = R.id.btn_switch;
      ImageButton btnSwitch = ViewBindings.findChildViewById(rootView, id);
      if (btnSwitch == null) {
        break missingId;
      }

      ConstraintLayout parentFragmentViewWall = (ConstraintLayout) rootView;

      id = R.id.recyclerview;
      RecyclerView recyclerview = ViewBindings.findChildViewById(rootView, id);
      if (recyclerview == null) {
        break missingId;
      }

      id = R.id.recyclerviewOfficialPost;
      RecyclerView recyclerviewOfficialPost = ViewBindings.findChildViewById(rootView, id);
      if (recyclerviewOfficialPost == null) {
        break missingId;
      }

      id = R.id.terminus_from;
      TextView terminusFrom = ViewBindings.findChildViewById(rootView, id);
      if (terminusFrom == null) {
        break missingId;
      }

      id = R.id.terminus_to;
      TextView terminusTo = ViewBindings.findChildViewById(rootView, id);
      if (terminusTo == null) {
        break missingId;
      }

      id = R.id.up;
      ConstraintLayout up = ViewBindings.findChildViewById(rootView, id);
      if (up == null) {
        break missingId;
      }

      return new FragmentViewWallBinding((ConstraintLayout) rootView, btnAddPost,
          btnDettaglibacheca, btnSwitch, parentFragmentViewWall, recyclerview,
          recyclerviewOfficialPost, terminusFrom, terminusTo, up);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
